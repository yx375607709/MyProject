# -*- coding: utf-8 -*-
# @Time    : 19-2-21 上午11:12
# @Author  : Paul
# @Email   : 287618817@qq.com
# @File    : semaphore.py
# @Software: PyCharm

from multiprocessing import Semaphore, Process
from time import sleep
import os

# 创建信号量
sem = Semaphore(3)

def fun():
    print('%d 想执行事件' % os.getpid())
    # 想执行事件必须得到信号量资源
    sem.acquire()
    print('%d 抢到了一个信号量,可以执行操作' % os.getpid())
    sleep(3)
    print('%d 执行完事件再增加信号量' % os.getpid())
    sem.release()

jobs = []
for _ in range(10):
    p = Process(target=fun)
    p.start()
    jobs.append(p)

for i in jobs:
    i.join()

print(sem.get_value())# -*- coding: utf-8 -*-
# @Time    : 19-2-21 上午11:12
# @Author  : Paul
# @Email   : 287618817@qq.com
# @File    : semaphore.py
# @Software: PyCharm

from multiprocessing import Semaphore, Process
from time import sleep
import os

# 创建信号量
sem = Semaphore(3)

def fun():
    print('%d 想执行事件' % os.getpid())
    # 想执行事件必须得到信号量资源
    sem.acquire()
    print('%d 抢到了一个信号量,可以执行操作' % os.getpid())
    sleep(3)
    print('%d 执行完事件再增加信号量' % os.getpid())
    sem.release()

jobs = []
for _ in range(10):
    p = Process(target=fun)
    p.start()
    jobs.append(p)

for i in jobs:
    i.join()

print(sem.get_value())# -*- coding: utf-8 -*-
# @Time    : 19-2-21 上午11:12
# @Author  : Paul
# @Email   : 287618817@qq.com
# @File    : semaphore.py
# @Software: PyCharm

from multiprocessing import Semaphore, Process
from time import sleep
import os

# 创建信号量
sem = Semaphore(3)

def fun():
    print('%d 想执行事件' % os.getpid())
    # 想执行事件必须得到信号量资源
    sem.acquire()
    print('%d 抢到了一个信号量,可以执行操作' % os.getpid())
    sleep(3)
    print('%d 执行完事件再增加信号量' % os.getpid())
    sem.release()

jobs = []
for _ in range(10):
    p = Process(target=fun)
    p.start()
    jobs.append(p)

for i in jobs:
    i.join()

print(sem.get_value())